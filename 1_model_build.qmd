---
title: "Random forest"
subtitle: "Series 2.2 - building model"
author: Jennifer HY Lin
date: '2023-10-11'
draft: true
categories: 
    - Machine learning projects
    - Tree models
    - Pandas
    - Scikit-learn
    - ChEMBL database
    - Python
jupyter: python3
format: html
bibliography: references.bib
---

##### **What is a random forest?**

The decision tree model built last time was purely based on one model on its own, which often might not be as accurate as we've hoped for. If we're thinking along the line mathematically or statistically to improve the model, we would then think about using the average of multiple models [@breiman1998] to see if this output would better reflect the real-life scenario. This model averaging approach was in fact constantly used in our lives with an example such as using majority votes in elections or decision-making processes.

This concept was also used in random forest [@breiman2001], which as the name suggested, was composed of many tree models (decision trees), forming a forest. The "random" part was introduced by two ways. The first one was via using bootstrap samples, where samples were drawn with replacements within the training datasets for each tree built in the ensemble. While bootstrap sampling was happening, randomness was also induced at the same time into the training sets. The second way randomness was introduced was by using a random subset of features for splitting at the nodes, or a full set of features could also be used instead - the main goal was to achieve best splits at each node.



-   L. Breiman's papers in 1998 & 2001
-   Look into random forest regression particularly
-   Two main types as classifier & regressor with differences e.g. class labels (binary) or continuous variables

Draft plan: - Many other options available in Scikit-learn ensemble methods e.g. voting classifier/regressor or stacking models to reduce biases - ?Likely using same dataset from series 2.1 - ?possibly one post only - Scikit-learn RandomForestRegressor() - array X (no. of samples, no. of features) vs. array y (no. of samples or target values) - Parameter tuning likely needed - Plots - Black-box ML (unlike white-box ML for decision tree)
