---
title: "Random forest"
subtitle: "Series 2.2 - building model"
author: Jennifer HY Lin
date: '2023-10-6'
draft: true
categories: 
    - Machine learning projects
    - Tree models
    - Pandas
    - Scikit-learn
    - ChEMBL database
    - Python
jupyter: python3
format: html
bibliography: references.bib
---

##### **What is a random forest?**

The decision tree model built last time was purely based on one model on its own, which often might not be as accurate as we've hoped for. If we're thinking along the line mathematically or statistically, we would then think about using the average of many models to see if the output from this approach would better reflect the real-life outcome. This model averaging approach has been constantly adopted in our lives with examples such as using majority votes in elections. This concept was also used in random forest, which as the name suggested, was composed of many tree models e.g. decision trees. The "random" part was introduced via using bootstrap samples, where samples were drawn with replacements within the training datasets for each tree built in the ensemble, which subsequently brought randomness in the training sets.


- Two main types as classifier & regressor with differences e.g. class labels (binary) or continuous variables
- L. Breiman's papers in 1998 & 2001
- Look into random forest regression particularly


Draft plan:
- Many other options available in Scikit-learn ensemble methods e.g. voting classifier/regressor or stacking models to reduce biases
- ?Likely using same dataset from series 2.1
- ?possibly one post only
- Scikit-learn RandomForestRegressor()
- array X (no. of samples, no. of features) vs. array y (no. of samples or target values)
- Parameter tuning likely needed
- Plots
- Black-box ML (unlike white-box ML for decision tree)

